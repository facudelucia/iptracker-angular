{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/info-container/info-container.component.ts","./src/app/components/info-container/info-container.component.html","./src/app/components/info-item/info-item.component.ts","./src/app/components/info-item/info-item.component.html","./src/app/components/map-container/map-container.component.ts","./src/app/components/map-container/map-container.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/geo.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { GeoService } from 'src/app/services/geo.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ILocation, IP } from './interfaces/ilocation.interface';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title: string = 'ipTracker';\r\n\r\n  constructor(private geoService: GeoService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.geoService.getInfoLocation()\r\n      .subscribe((resp: IP) => {\r\n        this.geoService.getLocation(resp.ip)\r\n          .subscribe((resp: ILocation) => {\r\n            this.geoService.setLocation(resp.location)\r\n            this.geoService.setIp(resp.ip)\r\n          })\r\n\r\n      })\r\n  }\r\n\r\n  prueba(event: string) {\r\n    if (!isNaN(Number(event)) || event.trim().length < 0) {\r\n      return\r\n    }\r\n    this.geoService.getLocation(event)\r\n      .subscribe(resp => {\r\n        this.geoService.setLocation(resp.location)\r\n      })\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"bg\" style=\"background-image: url(assets/pattern-bg.png)\"></div>\r\n  <h2 class=\"title\">IP Address Tracker</h2>\r\n  <div class=\"ip-info\">\r\n    <app-navbar (textWord)=\"prueba($event)\"></app-navbar>\r\n    <app-info-container> </app-info-container>\r\n  </div>\r\n  <app-map-container></app-map-container>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { MapContainerComponent } from './components/map-container/map-container.component';\r\nimport { InfoContainerComponent } from './components/info-container/info-container.component';\r\nimport { InfoItemComponent } from './components/info-item/info-item.component';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    MapContainerComponent,\r\n    InfoContainerComponent,\r\n    InfoItemComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    LeafletModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LocationClass } from 'src/app/interfaces/ilocation.interface';\r\nimport { GeoService } from 'src/app/services/geo.service';\r\n\r\n@Component({\r\n  selector: 'app-info-container',\r\n  templateUrl: './info-container.component.html',\r\n  styleUrls: ['./info-container.component.css'],\r\n})\r\nexport class InfoContainerComponent implements OnInit {\r\n\r\n  public location: LocationClass = this.geoService.defaultLocation\r\n  public locationExists: boolean = false\r\n  public ip: string = ''\r\n  public error: boolean = false\r\n  public msgError: string = 'Pruebe con otra direccion IP'\r\n\r\n  constructor(private geoService: GeoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.locationExists = false\r\n    this.geoService.location$.subscribe((location: LocationClass) => {\r\n      this.location = location\r\n      if (Object.keys(location).length) {\r\n        this.error = false\r\n        this.locationExists = true\r\n      } else {\r\n        this.error = false\r\n        this.locationExists = false\r\n      }\r\n    })\r\n    this.geoService.ip$.subscribe(ip => {\r\n      this.ip = ip\r\n    })\r\n  }\r\n\r\n}","<div class=\"card\">\r\n  <app-info-item *ngIf=\"!error && locationExists\" title=\"ip address\" [subtitle]=\"ip\"></app-info-item>\r\n  <app-info-item *ngIf=\"!error && locationExists\" title=\"location\"\r\n    [subtitle]=\"location.country + ', ' + location.region + ', ' + location.postalCode\"></app-info-item>\r\n  <app-info-item *ngIf=\"!error && locationExists\" title=\"city\" [subtitle]=\"location.city\"></app-info-item>\r\n  <app-info-item *ngIf=\"error\" title=\"Error\" [subtitle]=\"msgError\"></app-info-item>\r\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-info-item',\r\n  templateUrl: './info-item.component.html',\r\n  styleUrls: ['./info-item.component.css'],\r\n})\r\nexport class InfoItemComponent {\r\n  @Input() title: string = 'Title';\r\n  @Input() subtitle: string = 'Subtitle';\r\n  constructor() { }\r\n}","<div class=\"info-item\">\r\n  <h6 class=\"title\">{{ title }}</h6>\r\n  <h3 class=\"subtitle\">{{ subtitle }}</h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as L from 'leaflet'\r\nimport { LocationClass } from 'src/app/interfaces/ilocation.interface';\r\nimport { GeoService } from 'src/app/services/geo.service';\r\n\r\n@Component({\r\n  selector: 'app-map-container',\r\n  templateUrl: './map-container.component.html',\r\n  styleUrls: ['./map-container.component.css'],\r\n})\r\nexport class MapContainerComponent implements OnInit {\r\n  long!: number;\r\n  lat!: number;\r\n  map!: L.Map;\r\n  loading: boolean = true\r\n  constructor(private geoService: GeoService) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true\r\n    this.geoService.location$.subscribe((location: LocationClass) => {\r\n      this.long = location.lng\r\n      this.lat = location.lat\r\n      if (Object.keys(location).length) {\r\n        this.loading = false\r\n        if (this.map) {\r\n          this.map.remove()\r\n          this.createMap();\r\n        } else {\r\n          this.createMap();\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  createMap() {\r\n    this.map = L.map('map-container', {\r\n      center: [this.lat, this.long],\r\n      zoom: 14,\r\n      dragging: true,\r\n      zoomControl: true,\r\n      attributionControl: false,\r\n    });\r\n    this.configMap();\r\n    this.createMarket();\r\n  }\r\n\r\n  configMap() {\r\n    L.tileLayer(\r\n      `https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZmFjdWRlbHVjaWEiLCJhIjoiY2xlYW4xZmRvMGRuczN3cHBjaXQ3YjEybSJ9.Nxhst_oPOQ3EJy57CEHD5g`,\r\n      {\r\n        maxZoom: 18,\r\n        noWrap: true,\r\n        id: 'mapbox/streets-v11',\r\n        tileSize: 512,\r\n        zoomOffset: -1,\r\n        accessToken: 'pk.eyJ1IjoiZmFjdWRlbHVjaWEiLCJhIjoiY2xlYW4xZmRvMGRuczN3cHBjaXQ3YjEybSJ9.Nxhst_oPOQ3EJy57CEHD5g',\r\n      }\r\n    ).addTo(this.map);\r\n  }\r\n\r\n  createMarket() {\r\n    const marketDefault = L.icon({\r\n      iconUrl: 'assets/icon-location.svg',\r\n      iconSize: [30, 40],\r\n      iconAnchor: [15, 40],\r\n    });\r\n    L.Marker.prototype.options.icon = marketDefault;\r\n    L.marker([this.lat, this.long])\r\n      .addTo(this.map)\r\n      .bindPopup('Estas aqui')\r\n      .openPopup();\r\n  }\r\n}","<div class=\"map-wrapper\">\r\n  <div class=\"loading\" *ngIf=\"loading\">\r\n    <i class=\"fas fa-spinner fa-spin\"></i>\r\n  </div>\r\n  <div class=\"map-container\" id=\"map-container\"></div>\r\n</div>","import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent {\r\n\r\n  @Output() textWord: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  handlerInputChange(inputText: string) {\r\n    this.textWord.emit(inputText);\r\n  }\r\n}","<div class=\"bar\">\r\n  <div class=\"content-input\">\r\n    <input type=\"text\" #textInput placeholder=\"search for any IP address or domain\"\r\n      (keydown.enter)=\"handlerInputChange(textInput.value)\" />,\r\n    <div class=\"content-button\" (click)=\"handlerInputChange(textInput.value)\">\r\n      <img src=\"assets/icon-arrow.svg\" alt=\"\" />\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ILocation, IP, LocationClass } from '../interfaces/ilocation.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class GeoService {\r\n\r\n  public defaultLocation: LocationClass = {\r\n    country: 'Default Country',\r\n    region: 'Default Region',\r\n    city: 'Default City',\r\n    lat: 0.0,\r\n    lng: 0.0,\r\n    postalCode: '00000',\r\n    timezone: 'Default Timezone',\r\n    geonameId: 0\r\n  };\r\n\r\n  public ip: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  public location: BehaviorSubject<LocationClass> = new BehaviorSubject<LocationClass>(this.defaultLocation);\r\n\r\n  public ip$: Observable<string> = this.ip.asObservable()\r\n  public location$: Observable<LocationClass> = this.location.asObservable()\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getInfoLocation(): Observable<IP> {\r\n    return this.http.get<IP>('https://api.ipify.org?format=json')\r\n  }\r\n\r\n  getLocation(ip: string): Observable<ILocation> {\r\n    return this.http.get<ILocation>(`\r\n    https://geo.ipify.org/api/v1?apiKey=at_9duPboPWszokPXWMPxGIimhLCcusj&ipAddress=${ip}`)\r\n  }\r\n\r\n  public setIp(ip: string): void {\r\n    this.ip.next(ip)\r\n  }\r\n\r\n  public setLocation(location: LocationClass): void {\r\n    this.location.next(location)\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}